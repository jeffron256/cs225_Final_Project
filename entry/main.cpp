#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <array>

#include "../src/mapMaker.h"
#include "../src/shortestPath.h"

using std::cout;
using std::endl;

/**
 * The entry point of this project
 * 
 * The following will be shown in this entry
 * 1. Users will follow the guide and tutorial to enter their current stop name and destination stop name
 * 2. They will then see the route generated and follow with buslines
 * 3. The most visted bus stop among the shortest path
 * 
 * @param str1 The current stop name entered by user
 * @param str2 The destination stop name entered by user
 * @return The shortest path generated by both BFS and Dijkstra algorithem
 * @return The most visted bus stop among the shortest path
 * 
 * Dec/12/2022 BY group SMARTPOINTER
*/
int main(void)
{
    std::array<char, 30> str1, str2;
    std::string str_one, str_two;
    std::map<string, vector<string>> m;
    Graph g = init("../data/bus_stop_info_weekday.csv", m);
    std::vector<Vertex> vertices = g.getVertices();
    //g.print();

    printf("Hi! Welcome to use the MTD bus route FINDER(Ver4.0) made by group SMARTPOINTER\n");
    printf("Please enter your current BUS stop:\n");

    str_one = type_name(g, str1);

    printf("Your current BUS stop is %s\n", str1.data());
    printf("Now please enter your destination stop:\n");

    str_two = type_name(g, str2);
    
    printf("Your destination BUS stop is %s\n", str2.data());

    if (str_one == str_two) {
        printf("You cannot have a route between two same BUS stop!\n");
        return 1;
    }

    printf("You have finished entering your stop.\n");
    cout << "Your current stop is " << str_one << ", and Your destination stop is " << str_two << "." << endl;

    std::vector<Vertex> v = dijkstra(g, str_one, str_two);
    std::vector<Vertex> v2 = BFS(g, str_one, str_two);
    double time = time_needed(g, v);
    double time_2 = time_needed(g, v);

    printf("Your route have been created, CHECK IT OUT!!\n");

    if (v.size() == 1) {
        printf("Unfortunately, currently there is no any route between your entered two bus stops.");
        return 1;
    }

    printf("You route with least stops is:\n");

    print(v2, m);

    printf("And would approximately take about %f mins.\n\n", time_2);

    printf("You route with least time is:\n");

    print(v, m);

    printf("And would approximately take about %f mins.\n\n", time);

    printf("Below will show the BUS stops that are passed most frequently by different buses among the shortest path\n");

    print(g, v);

    return 0;
}